// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: customisation.proto

package customisation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateRuntimeOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the application instance for which the runtime options are being
	// modified
	Instance string `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// An opaque string representing optional configuration data to pass to the
	// Instance Customisation Plugin
	PluginOptions string `protobuf:"bytes,2,opt,name=pluginOptions,proto3" json:"pluginOptions,omitempty"`
	// The incoming RuntimeOptions object that will be modified and sent back
	RuntimeOptions *RuntimeOptions `protobuf:"bytes,3,opt,name=runtimeOptions,proto3" json:"runtimeOptions,omitempty"`
	// The ID of the player that is requesting an instance
	Player string `protobuf:"bytes,4,opt,name=player,proto3" json:"player,omitempty"`
}

func (x *UpdateRuntimeOptionsRequest) Reset() {
	*x = UpdateRuntimeOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuntimeOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuntimeOptionsRequest) ProtoMessage() {}

func (x *UpdateRuntimeOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuntimeOptionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRuntimeOptionsRequest) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateRuntimeOptionsRequest) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *UpdateRuntimeOptionsRequest) GetPluginOptions() string {
	if x != nil {
		return x.PluginOptions
	}
	return ""
}

func (x *UpdateRuntimeOptionsRequest) GetRuntimeOptions() *RuntimeOptions {
	if x != nil {
		return x.RuntimeOptions
	}
	return nil
}

func (x *UpdateRuntimeOptionsRequest) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

type UpdateRuntimeOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The modified RuntimeOptions object
	RuntimeOptions *RuntimeOptions `protobuf:"bytes,1,opt,name=runtimeOptions,proto3" json:"runtimeOptions,omitempty"`
}

func (x *UpdateRuntimeOptionsResponse) Reset() {
	*x = UpdateRuntimeOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRuntimeOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRuntimeOptionsResponse) ProtoMessage() {}

func (x *UpdateRuntimeOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRuntimeOptionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRuntimeOptionsResponse) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRuntimeOptionsResponse) GetRuntimeOptions() *RuntimeOptions {
	if x != nil {
		return x.RuntimeOptions
	}
	return nil
}

// Specifics about how this instance of the Pixel Streaming application should
// handle its runtime options (resolution, args)
type RuntimeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ResX and ResY arguments to be set
	Resolution *RuntimeOptions_Resolution `protobuf:"bytes,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
	// The current args that are being applied to a UE application. This should
	// include any that SPS applies by default as well as any that are applied via
	// the runtime args when creating the application via the REST API
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// Map of Environment Vars
	EnvironmentVariables map[string]string `protobuf:"bytes,3,rep,name=environmentVariables,proto3" json:"environmentVariables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A list of Kubernetes volumes to mount to the UE application pod
	VolumeMounts []*RuntimeOptions_VolumeMounts `protobuf:"bytes,4,rep,name=volumeMounts,proto3" json:"volumeMounts,omitempty"`
	// Changing the following settings will configure the Pixel Streaming Plugin
	PixelStreaming *RuntimeOptions_PixelStreaming `protobuf:"bytes,5,opt,name=pixelStreaming,proto3" json:"pixelStreaming,omitempty"`
}

func (x *RuntimeOptions) Reset() {
	*x = RuntimeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptions) ProtoMessage() {}

func (x *RuntimeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptions.ProtoReflect.Descriptor instead.
func (*RuntimeOptions) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{2}
}

func (x *RuntimeOptions) GetResolution() *RuntimeOptions_Resolution {
	if x != nil {
		return x.Resolution
	}
	return nil
}

func (x *RuntimeOptions) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *RuntimeOptions) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *RuntimeOptions) GetVolumeMounts() []*RuntimeOptions_VolumeMounts {
	if x != nil {
		return x.VolumeMounts
	}
	return nil
}

func (x *RuntimeOptions) GetPixelStreaming() *RuntimeOptions_PixelStreaming {
	if x != nil {
		return x.PixelStreaming
	}
	return nil
}

type RuntimeOptions_Resolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of pixels in the X axis for the resolution
	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	// The number of pixels in the Y axis for the resolution
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *RuntimeOptions_Resolution) Reset() {
	*x = RuntimeOptions_Resolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOptions_Resolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptions_Resolution) ProtoMessage() {}

func (x *RuntimeOptions_Resolution) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptions_Resolution.ProtoReflect.Descriptor instead.
func (*RuntimeOptions_Resolution) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{2, 0}
}

func (x *RuntimeOptions_Resolution) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RuntimeOptions_Resolution) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type RuntimeOptions_PixelStreaming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Changing the following settings will configure the WebRTC library that
	// the Pixel Streaming Plugin uses internally
	WebRTC *RuntimeOptions_PixelStreaming_WebRTC `protobuf:"bytes,1,opt,name=webRTC,proto3" json:"webRTC,omitempty"`
}

func (x *RuntimeOptions_PixelStreaming) Reset() {
	*x = RuntimeOptions_PixelStreaming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOptions_PixelStreaming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptions_PixelStreaming) ProtoMessage() {}

func (x *RuntimeOptions_PixelStreaming) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptions_PixelStreaming.ProtoReflect.Descriptor instead.
func (*RuntimeOptions_PixelStreaming) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{2, 1}
}

func (x *RuntimeOptions_PixelStreaming) GetWebRTC() *RuntimeOptions_PixelStreaming_WebRTC {
	if x != nil {
		return x.WebRTC
	}
	return nil
}

type RuntimeOptions_VolumeMounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the Persistent Volume Claim
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The path to mount in the container
	MountPath string `protobuf:"bytes,2,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	// Whether to mount the path as read-only
	ReadOnly bool `protobuf:"varint,3,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
}

func (x *RuntimeOptions_VolumeMounts) Reset() {
	*x = RuntimeOptions_VolumeMounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOptions_VolumeMounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptions_VolumeMounts) ProtoMessage() {}

func (x *RuntimeOptions_VolumeMounts) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptions_VolumeMounts.ProtoReflect.Descriptor instead.
func (*RuntimeOptions_VolumeMounts) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{2, 3}
}

func (x *RuntimeOptions_VolumeMounts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RuntimeOptions_VolumeMounts) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *RuntimeOptions_VolumeMounts) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type RuntimeOptions_PixelStreaming_WebRTC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum FPS WebRTC will try to capture/encode/transmit.
	MaxFPS int64 `protobuf:"varint,1,opt,name=maxFPS,proto3" json:"maxFPS,omitempty"`
}

func (x *RuntimeOptions_PixelStreaming_WebRTC) Reset() {
	*x = RuntimeOptions_PixelStreaming_WebRTC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customisation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOptions_PixelStreaming_WebRTC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOptions_PixelStreaming_WebRTC) ProtoMessage() {}

func (x *RuntimeOptions_PixelStreaming_WebRTC) ProtoReflect() protoreflect.Message {
	mi := &file_customisation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOptions_PixelStreaming_WebRTC.ProtoReflect.Descriptor instead.
func (*RuntimeOptions_PixelStreaming_WebRTC) Descriptor() ([]byte, []int) {
	return file_customisation_proto_rawDescGZIP(), []int{2, 1, 0}
}

func (x *RuntimeOptions_PixelStreaming_WebRTC) GetMaxFPS() int64 {
	if x != nil {
		return x.MaxFPS
	}
	return 0
}

var File_customisation_proto protoreflect.FileDescriptor

var file_customisation_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d,
	0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xab, 0x05, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x63, 0x0a,
	0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x46, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x0c, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x1a, 0x28, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x79, 0x1a, 0x77, 0x0a, 0x0e, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x06, 0x77, 0x65, 0x62, 0x52, 0x54, 0x43, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x69, 0x78, 0x65,
	0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x57, 0x65, 0x62, 0x52, 0x54,
	0x43, 0x52, 0x06, 0x77, 0x65, 0x62, 0x52, 0x54, 0x43, 0x1a, 0x20, 0x0a, 0x06, 0x57, 0x65, 0x62,
	0x52, 0x54, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x50, 0x53, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x46, 0x50, 0x53, 0x1a, 0x47, 0x0a, 0x19, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x32, 0x80, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x70, 0x69, 0x78, 0x65,
	0x6c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_customisation_proto_rawDescOnce sync.Once
	file_customisation_proto_rawDescData = file_customisation_proto_rawDesc
)

func file_customisation_proto_rawDescGZIP() []byte {
	file_customisation_proto_rawDescOnce.Do(func() {
		file_customisation_proto_rawDescData = protoimpl.X.CompressGZIP(file_customisation_proto_rawDescData)
	})
	return file_customisation_proto_rawDescData
}

var file_customisation_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_customisation_proto_goTypes = []interface{}{
	(*UpdateRuntimeOptionsRequest)(nil),          // 0: proto.UpdateRuntimeOptionsRequest
	(*UpdateRuntimeOptionsResponse)(nil),         // 1: proto.UpdateRuntimeOptionsResponse
	(*RuntimeOptions)(nil),                       // 2: proto.RuntimeOptions
	(*RuntimeOptions_Resolution)(nil),            // 3: proto.RuntimeOptions.Resolution
	(*RuntimeOptions_PixelStreaming)(nil),        // 4: proto.RuntimeOptions.PixelStreaming
	nil,                                          // 5: proto.RuntimeOptions.EnvironmentVariablesEntry
	(*RuntimeOptions_VolumeMounts)(nil),          // 6: proto.RuntimeOptions.VolumeMounts
	(*RuntimeOptions_PixelStreaming_WebRTC)(nil), // 7: proto.RuntimeOptions.PixelStreaming.WebRTC
}
var file_customisation_proto_depIdxs = []int32{
	2, // 0: proto.UpdateRuntimeOptionsRequest.runtimeOptions:type_name -> proto.RuntimeOptions
	2, // 1: proto.UpdateRuntimeOptionsResponse.runtimeOptions:type_name -> proto.RuntimeOptions
	3, // 2: proto.RuntimeOptions.resolution:type_name -> proto.RuntimeOptions.Resolution
	5, // 3: proto.RuntimeOptions.environmentVariables:type_name -> proto.RuntimeOptions.EnvironmentVariablesEntry
	6, // 4: proto.RuntimeOptions.volumeMounts:type_name -> proto.RuntimeOptions.VolumeMounts
	4, // 5: proto.RuntimeOptions.pixelStreaming:type_name -> proto.RuntimeOptions.PixelStreaming
	7, // 6: proto.RuntimeOptions.PixelStreaming.webRTC:type_name -> proto.RuntimeOptions.PixelStreaming.WebRTC
	0, // 7: proto.InstanceCustomisationPlugin.UpdateRuntimeOptions:input_type -> proto.UpdateRuntimeOptionsRequest
	1, // 8: proto.InstanceCustomisationPlugin.UpdateRuntimeOptions:output_type -> proto.UpdateRuntimeOptionsResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_customisation_proto_init() }
func file_customisation_proto_init() {
	if File_customisation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_customisation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuntimeOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRuntimeOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOptions_Resolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOptions_PixelStreaming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOptions_VolumeMounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customisation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOptions_PixelStreaming_WebRTC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_customisation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customisation_proto_goTypes,
		DependencyIndexes: file_customisation_proto_depIdxs,
		MessageInfos:      file_customisation_proto_msgTypes,
	}.Build()
	File_customisation_proto = out.File
	file_customisation_proto_rawDesc = nil
	file_customisation_proto_goTypes = nil
	file_customisation_proto_depIdxs = nil
}
